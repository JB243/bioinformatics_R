class LinkedNode():
    def __init__(self,x):
        self.val = x
        self.next = None

class SLList():
    def __init__(self)->None:
        self.sentinel = LinkedNode(0)
        self.size = 0
    
    def addFirst(self, x:int)->None:
        newFirst = LinkedNode(x)
        newFirst.next = self.sentinel.next
        self.sentinel.next = newFirst
        self.size += 1

class data_indexed_array():
    max_element = 10
    def __init__(self)->None:
        self.array = [None] * max_element

    def hash_valu(self, x:int)->int:
        return x^3 % max_element
        
    def add(self)->None:
        i = hash_value(x)
        if self.array[i] == None:
            self.array[i] = SLList()
        self.array[i].addFirst(x)
