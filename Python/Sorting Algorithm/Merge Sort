def merge(left, right): 
    len_left, len_right = len(left), len(right)
    i_left, i_right = 0, 0
    l = []
    
    while((i_left < len_left) and (i_right < len_right)):
        if(left[i_left] < right[i_right]):
            l.append(left[i_left])
            i_left += 1
        else:
            l.append(right[i_right])
            i_right += 1
    
    while(i_left < len_left):
        l.append(left[i_left])
        i_left += 1

    while(i_right < len_right):
        l.append(right[i_right])
        i_right += 1

    return l
    
def merge_sort(l): 
    if((len(l) == 0) or (len(l) == 1)):
        return l
    mid = int(len(l) / 2)
    left = merge_sort(l[0:mid])
    right = merge_sort(l[mid:])
    r = merge(left, right)

    return r

merge_sort([3, 2, 7, 6, 5, 9, 8])
# [2, 3, 5, 6, 7, 8, 9]
