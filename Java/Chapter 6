# ---
class Employee implements Comparable<Employee>{
    String str;
    Employee(String str) {
        this.str = str;
    }
    @Override
    public int compareTo(Employee e){
        return str.compareTo(e.str);
    }
    @Override
    public String toString(){
        return str;
    }
}
public class Main{
    public static void main(String[] args){
        Set<Employee> set = new TreeSet<>();
        Employee e1 = new Employee("B");
        Employee e2 = new Employee("A");
        set.add(e1);    set.add(e2);
        System.out.println(set); // [A, B]
    }
}

# ---
class Employee{
    String str;
    Employee(String str) {
        this.str = str;
    }
    @Override
    public String toString(){
        return str;
    }
}
class EmployeeComp implements Comparator<Employee>{
    @Override
    public int compare(Employee e1, Employee e2){
        return e1.str.compareTo(e2.str);
    }
}
public class Main{
    public static void main(String[] args){
        Set<Employee> set = new TreeSet<>(new EmployeeComp());
        Employee e1 = new Employee("B");
        Employee e2 = new Employee("A");
        set.add(e1);    set.add(e2);
        System.out.println(set);
    }
}
