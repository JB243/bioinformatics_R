# ---
try { Action }    // statements that may cause an exception 
catch(ExceptionType parameter)    // error handling code
  { Handler }
finally { }    // statements to be executed

# ---
String finleName = "/dev/null/NonExistentPath";
Scanner file = null;
try {
  file = new Scanner(new File(fileName));
} catch (FileNotFoundException e) {
  e.printStachTrace();
} finally { // Prevent Resource Leaks
  if(file != null){
    file.close();
  }
}

# ---
static void pubfirstline(String fname) throws Exception {
  BufferedReader in;
  try {
    in = new BufferedReader(new FileReader(fname));
  } catch (FileNotFoundException e) {
    System.err.println("Could not open " + fname);
    throw e;
  } catch (Exception e){
    throw e;
  }
}

# ---
static String readLine(String path) throws IOException{
  try (BufferedReader br =
       new BufferedReader(new FileReader(path))) {
        return br.readLine();
  } // BufferedReader implements AutoCloseable 
}

# ---
class MyRuntimeException extends RuntimeException {
  public MyRuntimeException ( ) { }
  public MyRuntimeException(String message) {
    super(message);
  }
}
